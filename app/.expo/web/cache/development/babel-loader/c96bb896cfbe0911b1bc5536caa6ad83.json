{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/titan/try-again/app/components/LoginOrSignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Keychain from 'react-native-keychain';\nexport default function isLoggingIn() {\n  var textInputStyle = {\n    height: 40\n  };\n\n  var _useState = useState({\n    isLoggingIn: true,\n    name: '',\n    username: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formState = _useState2[0],\n      setFormState = _useState2[1];\n\n  var hashPassword = function hashPassword() {};\n\n  var checkPassword = function checkPassword() {\n    var hash, isCorrect, credentials;\n    return _regeneratorRuntime.async(function checkPassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Keychain.setGenericPassword(username, password));\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Keychain.getGenericPassword());\n\n          case 5:\n            credentials = _context.sent;\n            credentials ? console.log('Credentials loaded for ' + credentials.username) : console.log('No credentials stored');\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.log('Keychain couldn\\'t be accessed!', error);\n\n          case 12:\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(Ketchain.resetGenericPassword());\n\n          case 14:\n            console.log(\"passwords match: \" + isCorrect);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  };\n\n  var submitLogInForm = function submitLogInForm() {\n    console.log(formState);\n    checkPassword();\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: textInputStyle,\n    placeholder: \"username\",\n    onChangeText: function onChangeText(text) {\n      return setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        username: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: textInputStyle,\n    placeholder: \"password\",\n    onChangeText: function onChangeText(text) {\n      return setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        password: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"submit\",\n    onPress: function onPress() {\n      return submitLogInForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/titan/try-again/app/components/LoginOrSignUp.js"],"names":["React","useState","Keychain","isLoggingIn","textInputStyle","height","name","username","password","formState","setFormState","hashPassword","checkPassword","setGenericPassword","getGenericPassword","credentials","console","log","error","Ketchain","resetGenericPassword","isCorrect","submitLogInForm","text"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,MAAMC,cAAc,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAvB;;AADkC,kBAEAJ,QAAQ,CAAC;AACvCE,IAAAA,WAAW,EAAE,IAD0B;AAEvCG,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,QAAQ,EAAE;AAJ6B,GAAD,CAFR;AAAA;AAAA,MAE3BC,SAF2B;AAAA,MAEhBC,YAFgB;;AASlC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM,CAG1B,CAHD;;AAKA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAIZV,QAAQ,CAACW,kBAAT,CAA4BN,QAA5B,EAAsCC,QAAtC,CAJY;;AAAA;AAAA;AAAA;AAAA,6CAQYN,QAAQ,CAACY,kBAAT,EARZ;;AAAA;AAQRC,YAAAA,WARQ;AASdA,YAAAA,WAAW,GACPC,OAAO,CAACC,GAAR,CAAY,4BAA4BF,WAAW,CAACR,QAApD,CADO,GAELS,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAFN;AATc;AAAA;;AAAA;AAAA;AAAA;AAadD,YAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CC,KAA/C;;AAbc;AAAA;AAAA,6CAeZC,QAAQ,CAACC,oBAAT,EAfY;;AAAA;AAiBlBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBI,SAAlC;;AAjBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAoBA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BN,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACAG,IAAAA,aAAa;AAChB,GAHD;;AAKA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAER,cADX;AAEI,IAAA,WAAW,EAAC,UAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAmB,IAAI;AAAA,aAAIb,YAAY,iCAC3BD,SAD2B;AAE9BF,QAAAA,QAAQ,EAAEgB;AAFoB,SAAhB;AAAA,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEnB,cADX;AAEI,IAAA,WAAW,EAAC,UAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAmB,IAAI;AAAA,aAAIb,YAAY,iCAC3BD,SAD2B;AAE9BD,QAAAA,QAAQ,EAAEe;AAFoB,SAAhB;AAAA,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAkBI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMD,eAAe,EAArB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CADJ;AAyBH","sourcesContent":["import React, { useState } from 'react';\nimport { TextInput, Button, Text, View } from 'react-native';\nimport * as Keychain from 'react-native-keychain';\n\nexport default function isLoggingIn() {\n    const textInputStyle = { height: 40 };\n    const [formState, setFormState] = useState({\n        isLoggingIn: true,\n        name: '',\n        username: '',\n        password: '',\n    });\n\n    const hashPassword = () => {\n\n\n    }\n\n    const checkPassword = async () => {\n        let hash; //TODO get hash from db\n        let isCorrect;\n\n        await Keychain.setGenericPassword(username, password);\n\n        try {\n\n            const credentials = await Keychain.getGenericPassword();\n            credentials ?\n                console.log('Credentials loaded for ' + credentials.username)\n                : console.log('No credentials stored');\n        } catch (err) {\n            console.log('Keychain couldn\\'t be accessed!', error);\n        }\n        await Ketchain.resetGenericPassword();\n\n        console.log(\"passwords match: \" + isCorrect)\n    }\n\n    const submitLogInForm = () => {\n        console.log(formState);\n        checkPassword();\n    }\n\n    return (\n        <View>\n            {/* TODO logo */}\n            <TextInput\n                style={textInputStyle}\n                placeholder='username'\n                onChangeText={text => setFormState({\n                    ...formState,\n                    username: text\n                })}\n            />\n            <TextInput\n                style={textInputStyle}\n                placeholder='password'\n                onChangeText={text => setFormState({\n                    ...formState,\n                    password: text\n                })}\n            />\n            <Button\n                title=\"submit\"\n                onPress={() => submitLogInForm()}\n            />\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}